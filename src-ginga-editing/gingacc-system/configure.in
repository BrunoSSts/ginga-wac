AC_INIT(configure.in)

AM_CONFIG_HEADER(include/config.h)
AM_INIT_AUTOMAKE(gingaccsystem, 0.10.1)

AC_LANG_CPLUSPLUS
AC_PROG_CXX([g++])
AM_PROG_LIBTOOL

DIRECTFB_MAJOR_VERSION=1
DIRECTFB_MINOR_VERSION=0
DIRECTFB_MICRO_VERSION=0
DIRECTFB_INTERFACE_AGE=0
DIRECTFB_BINARY_AGE=0
DIRECTFB_VERSION=$DIRECTFB_MAJOR_VERSION.$DIRECTFB_MINOR_VERSION.$DIRECTFB_MICRO_VERSION

AC_SUBST(DIRECTFB_MAJOR_VERSION)
AC_SUBST(DIRECTFB_MINOR_VERSION)
AC_SUBST(DIRECTFB_MICRO_VERSION)
AC_SUBST(DIRECTFB_INTERFACE_AGE)
AC_SUBST(DIRECTFB_BINARY_AGE)
AC_SUBST(DIRECTFB_VERSION)

CXXFLAGS="-fPIC $CXXFLAGS"
CFLAGS="-fPIC $CFLAGS"

# Bring additional directories where things might be found into our
# search path. I don't know why autoconf doesn't do this by default
for spfx in /usr/lib /usr/local/lib /usr/local/lib/ginga; do
if test -d ${spfx}; then
LDFLAGS="-L${spfx} $LDFLAGS"
fi
done

for spfx in /usr/include /usr/local/include /usr/local/include/ginga; do
if test -d ${spfx}; then
CPPFLAGS="-I${spfx} $CPPFLAGS"
fi
done


###########
# HEADERS #
###########

##################
# TeleMidia Util #
##################

AC_CHECK_HEADER([util/functions.h], [], AC_MSG_ERROR([

Couldn't find TeleMidia Util headers.
Please install TeleMidia Util Headers.

]))


##############################
# Ginga CC Component Manager #
##############################

AC_CHECK_HEADER([cm/IComponentManager.h], [], AC_MSG_ERROR([

Couldn't find Ginga CC Component Manager headers.
Please install gingacc-cm project.

]))

########
# LIBS #
########

##################
# TeleMidia Util #
##################

AC_HAVE_LIBRARY(telemidiautil, , AC_ERROR([

Couldn't find TeleMidia Util library.
Please install TeleMidia Util Library.

]))

#
# Find pkg-config
#
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test x$PKG_CONFIG = xno ; then
AC_MSG_ERROR([*** pkg-config not found. See http://pkgconfig.sourceforge.net])
fi

if ! pkg-config --atleast-pkgconfig-version 0.9 ; then
AC_MSG_ERROR([*** pkg-config too old; version 0.9 or better required.])
fi

#
# Check for DirectFB
#
DIRECTFB_MAX_VERSION=1.2.0
DIRECTFB_MIN_VERSION=$DIRECTFB_VERSION

AC_MSG_CHECKING(for DirectFB == $DIRECTFB_MAN_VERSION)
if $PKG_CONFIG --atleast-version $DIRECTFB_MAX_VERSION directfb ; then
DFB_CFLAGS=`$PKG_CONFIG --cflags directfb`
DFB_LIBS=`$PKG_CONFIG --libs directfb`
DFB_VERSION=`$PKG_CONFIG --modversion directfb`
AC_MSG_RESULT([found (version $DFB_VERSION)])
AC_DEFINE(HAVE_DIRECTFB, 1, [Define to 1 if you have DFB support.])
AC_DEFINE(DFB_VER, 120, [Version Control.])
else
if $PKG_CONFIG --atleast-version $DIRECTFB_MIN_VERSION directfb ; then
DFB_CFLAGS=`$PKG_CONFIG --cflags directfb`
DFB_LIBS=`$PKG_CONFIG --libs directfb`
DFB_VERSION=`$PKG_CONFIG --modversion directfb`
AC_MSG_RESULT([found (version $DFB_VERSION)])
AC_DEFINE(HAVE_DIRECTFB, 1, [Define to 1 if you have DFB support.])
AC_DEFINE(DFB_VER, 100, [Version Control.])
else
AC_MSG_ERROR([
*** DirectFB $DIRECTFB_REQUIRED_VERSION or newer is required.
Try also "export PKG_CONFIG_PATH=..." and run configure again
])
fi
fi

################
# Fusion Sound #
################

AC_HAVE_LIBRARY(fusionsound,

AC_MSG_RESULT([FusionSound found!])
AC_DEFINE(HAVE_FUSIONSOUND, 1, [Define to 1 if you have FusionSound support.]),

AC_MSG_RESULT([

Couldn't find FusionSound library.
FusionSound Support not built.

]))

DFB_LIBS=`$PKG_CONFIG --libs directfb`
FUSIONSOUND_LIBS=`$PKG_CONFIG --libs fusionsound`

AC_SUBST(DFB_LIBS)
AC_SUBST(FUSIONSOUND_LIBS)


AC_OUTPUT(
    Makefile include/thread/Makefile include/io/Makefile
    include/io/interface/Makefile include/io/interface/content/Makefile
    include/io/interface/content/image/Makefile
    include/io/interface/content/text/Makefile
    include/io/interface/device/Makefile
    include/io/interface/input/Makefile
    include/io/interface/output/Makefile
    src/thread/Makefile src/io/Makefile
    src/io/interface/content/audio/Makefile
    src/io/interface/content/image/Makefile
    src/io/interface/content/text/Makefile
    src/io/interface/content/video/Makefile files/Makefile test/Makefile)
